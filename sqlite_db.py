import sqlite3
import os
from datetime import datetime


def init_sqlite():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = sqlite3.connect('applications.db', check_same_thread=False)
        cursor = conn.cursor()

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS applications (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                username TEXT,
                full_name TEXT,
                phone TEXT,
                experience TEXT,
                status TEXT DEFAULT 'new',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        conn.commit()
        return conn
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None


def add_application_sqlite(user_id, username, full_name, phone, experience):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –≤ –±–∞–∑—É"""
    try:
        conn = init_sqlite()
        if conn:
            cursor = conn.cursor()
            cursor.execute('''
                INSERT INTO applications (user_id, username, full_name, phone, experience)
                VALUES (?, ?, ?, ?, ?)
            ''', (user_id, username, full_name, phone, experience))
            conn.commit()
            conn.close()
            return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
    return False


def get_applications_from_db():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∏–∑ –±–∞–∑—ã"""
    try:
        conn = init_sqlite()
        if conn:
            cursor = conn.cursor()
            cursor.execute('SELECT * FROM applications ORDER BY created_at DESC')
            applications = cursor.fetchall()
            conn.close()
            return applications
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫: {e}")
    return []


def get_new_applications_from_db():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫"""
    try:
        conn = init_sqlite()
        if conn:
            cursor = conn.cursor()
            cursor.execute('SELECT * FROM applications WHERE status = "new" ORDER BY created_at DESC')
            applications = cursor.fetchall()
            conn.close()
            return applications
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫: {e}")
    return []


def send_db_to_admin(context, admin_id):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω—É"""
    try:
        if os.path.exists('applications.db'):
            with open('applications.db', 'rb') as f:
                context.bot.send_document(
                    chat_id=admin_id,
                    document=f,
                    caption='üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∑–∞—è–≤–∫–∞–º–∏\n\n'
                            '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:\n'
                            '1. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª\n'
                            '2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ DB Browser for SQLite\n'
                            '3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É "–î–∞–Ω–Ω—ã–µ"\n'
                            '4. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É "applications"'
                )
            return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: {e}")
    return False


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
init_sqlite()